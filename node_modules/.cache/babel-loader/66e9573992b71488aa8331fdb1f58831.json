{"ast":null,"code":"//import { createStore } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"./counter\";\nimport authReducer from './auth'; // const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//       state.counter++;\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"increace\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if(action.type === 'decrement'){\n//     return {\n//         counter: state.counter - 1,\n//         showCounter: state.showCounter,\n//       };\n//   }\n//   if(action.type === 'toggle'){\n//     return {\n//         counter: state.counter,\n//         showCounter: !state.showCounter,\n//       };\n//   }\n//   return state;\n// };\n//const store = createStore(counterSlice.reducer); //we would have problems if we havedifferent slices\n//const store = configureStore({reducer: counterSlice.reducer});\n\nconst store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    auth: authReducer\n  }\n});\nexport default store;","map":{"version":3,"sources":["D:/React/18 - Redux/01-starting-project/src/store/index.js"],"names":["configureStore","counterReducer","authReducer","store","reducer","counter","auth"],"mappings":"AAAA;AACA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,OAAOC,WAAP,MAAwB,QAAxB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;;AACA,MAAMC,KAAK,GAAGH,cAAc,CAAC;AAC3BI,EAAAA,OAAO,EAAE;AAAEC,IAAAA,OAAO,EAAEJ,cAAX;AAA2BK,IAAAA,IAAI,EAAEJ;AAAjC;AADkB,CAAD,CAA5B;AAIA,eAAeC,KAAf","sourcesContent":["//import { createStore } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport counterReducer from \"./counter\";\r\nimport authReducer from './auth';\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//   if (action.type === \"increment\") {\r\n//       state.counter++;\r\n//     return {\r\n//       counter: state.counter + 1,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"increace\") {\r\n//     return {\r\n//       counter: state.counter + action.amount,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n\r\n//   if(action.type === 'decrement'){\r\n//     return {\r\n//         counter: state.counter - 1,\r\n//         showCounter: state.showCounter,\r\n//       };\r\n//   }\r\n\r\n//   if(action.type === 'toggle'){\r\n//     return {\r\n//         counter: state.counter,\r\n//         showCounter: !state.showCounter,\r\n//       };\r\n//   }\r\n\r\n//   return state;\r\n// };\r\n\r\n//const store = createStore(counterSlice.reducer); //we would have problems if we havedifferent slices\r\n\r\n//const store = configureStore({reducer: counterSlice.reducer});\r\nconst store = configureStore({\r\n  reducer: { counter: counterReducer, auth: authReducer },\r\n});\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}