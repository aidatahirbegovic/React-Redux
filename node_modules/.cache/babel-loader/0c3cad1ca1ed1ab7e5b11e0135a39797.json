{"ast":null,"code":"//import { createStore } from \"redux\";\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++; //we can write like this here, but we still cant manipulate\n      //it clones this code, and overwrites state-translated into imutable code\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increace(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n}); // const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//       state.counter++;\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"increace\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if(action.type === 'decrement'){\n//     return {\n//         counter: state.counter - 1,\n//         showCounter: state.showCounter,\n//       };\n//   }\n//   if(action.type === 'toggle'){\n//     return {\n//         counter: state.counter,\n//         showCounter: !state.showCounter,\n//       };\n//   }\n//   return state;\n// };\n//const store = createStore(counterSlice.reducer); //we would have problems if we havedifferent slices\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["D:/React/18 - Redux/01-starting-project/src/store/index.js"],"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increace","action","payload","toggle","store","reducer","counterActions","actions"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;AACA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAE,SADuB;AAE7BJ,EAAAA,YAF6B;AAG7BK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAAEC,KAAF,EAAS;AACdA,MAAAA,KAAK,CAACN,OAAN,GADc,CACG;AACjB;AACH,KAJK;;AAKNO,IAAAA,SAAS,CAAED,KAAF,EAAS;AACdA,MAAAA,KAAK,CAACN,OAAN;AACH,KAPK;;AAQNQ,IAAAA,QAAQ,CAAEF,KAAF,EAASG,MAAT,EAAiB;AACrBH,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,OAAvC;AACH,KAVK;;AAWNC,IAAAA,MAAM,CAAEL,KAAF,EAAS;AACXA,MAAAA,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;AACH;;AAbK;AAHmB,CAAD,CAAhC,C,CAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAEA,MAAMW,KAAK,GAAGd,cAAc,CAAC;AAACe,EAAAA,OAAO,EAAEX,YAAY,CAACW;AAAvB,CAAD,CAA5B;AACA,OAAO,MAAMC,cAAc,GAAGZ,YAAY,CAACa,OAApC;AACP,eAAeH,KAAf","sourcesContent":["//import { createStore } from \"redux\";\r\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\nconst initialState = { counter: 0, showCounter: true };\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState,\r\n    reducers: {\r\n        increment (state) {\r\n            state.counter++; //we can write like this here, but we still cant manipulate\r\n            //it clones this code, and overwrites state-translated into imutable code\r\n        },\r\n        decrement (state) {\r\n            state.counter--;\r\n        },\r\n        increace (state, action) {\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        toggle (state) {\r\n            state.showCounter = !state.showCounter;\r\n        }\r\n    }\r\n});\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//   if (action.type === \"increment\") {\r\n//       state.counter++;\r\n//     return {\r\n//       counter: state.counter + 1,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"increace\") {\r\n//     return {\r\n//       counter: state.counter + action.amount,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n\r\n//   if(action.type === 'decrement'){\r\n//     return {\r\n//         counter: state.counter - 1,\r\n//         showCounter: state.showCounter,\r\n//       };\r\n//   }\r\n\r\n//   if(action.type === 'toggle'){\r\n//     return {\r\n//         counter: state.counter,\r\n//         showCounter: !state.showCounter,\r\n//       };\r\n//   }\r\n\r\n//   return state;\r\n// };\r\n\r\n//const store = createStore(counterSlice.reducer); //we would have problems if we havedifferent slices\r\n\r\nconst store = configureStore({reducer: counterSlice.reducer});\r\nexport const counterActions = counterSlice.actions;\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}